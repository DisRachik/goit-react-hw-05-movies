{"version":3,"file":"static/js/134.ecb1d1a9.chunk.js","mappings":"uNA+DA,UAzDe,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAa,IAAIC,gBAiBvB,OAfAV,GAAa,GACbF,EAAU,KACVa,EAAAA,EAAAA,IAAkBL,EAAOG,GACtBG,MAAK,SAAAC,GAEJ,GADAX,EAAS,OACJW,EAAKC,OAAQ,MAAM,IAAIC,MAC5BjB,EAAUe,EACX,IACAG,OAAM,SAAAC,GACLf,EAAS,2KACV,IACAgB,SAAQ,WACPlB,GAAa,EACd,IAEI,WACLS,EAAWU,OACZ,CArBA,CAsBF,GAAE,CAACb,IASJ,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,mFACA,SAAC,KAAD,CAAgBc,MAAOd,EAAOe,SAXb,SAAAC,GACrBA,EAAEC,iBAEF,IAAMjB,EAAQgB,EAAEE,OAAOC,SAAS,GAAGL,MAAMM,cAAcC,OACvDtB,EAAgBC,EAAQ,CAAEA,MAAAA,GAAU,CAAC,EACtC,IAOMP,IAAa,SAAC,cAAD,IACbE,IAAS,uBAAIA,KAEd,SAAC,KAAD,CAAWJ,OAAQA,QAI1B,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Container, Section, PageTitle } from 'styles';\nimport { fetchSearchMovies } from 'service/api';\nimport { SearchForMovie, MovieList, loader } from 'components';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const controller = new AbortController();\n\n    setIsLoading(true);\n    setMovies([]);\n    fetchSearchMovies(query, controller)\n      .then(data => {\n        setError(null);\n        if (!data.length) throw new Error();\n        setMovies(data);\n      })\n      .catch(err => {\n        setError('Щось пішло не так!!! Спробуй ще раз...');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n\n    return () => {\n      controller.abort();\n    };\n  }, [query]);\n\n  const onSearchSubmit = e => {\n    e.preventDefault();\n\n    const query = e.target.children[0].value.toLowerCase().trim();\n    setSearchParams(query ? { query } : {});\n  };\n\n  return (\n    <Section>\n      <Container>\n        <PageTitle>Пошук фільму</PageTitle>\n        <SearchForMovie value={query} onSubmit={onSearchSubmit} />\n        {isLoading && <loader.TaskList />}\n        {error && <p>{error}</p>}\n\n        <MovieList movies={movies} />\n      </Container>\n    </Section>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","controller","AbortController","fetchSearchMovies","then","data","length","Error","catch","err","finally","abort","value","onSubmit","e","preventDefault","target","children","toLowerCase","trim"],"sourceRoot":""}